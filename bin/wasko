#!/usr/bin/ruby

require "rubygems"
require "lib/wasko"
require "thor"
require "color"


module Wasko
  class CLI < Thor
    include Thor::Actions

    map "-l" => :list
    map "-C" => :color
    map "-D" => :css
    map "-p" => :palette
    map "-w" => :save_color
    map "-r" => :load_color

    desc "palette", "Sets both back and foreground color adjusted to supplied hex_color"
    def palette(hex_color)
      Wasko.palette_from_color hex_color
    end

    desc "color", "Sets background color to one of the named colors"
    def color(color_name="red")
      if Wasko.colors.include?(color_name)
        Wasko.draw_named_color(color_name)
      else
        say "Please pick a color from: [#{Wasko.colors.join(", ")}]"
      end
    end

    desc "css", "Sets background color to the css color"
    def css(hex_color="cc0000")
      Wasko.draw_css_color hex_color
    end


    desc "load NAME", "Loads a stored theme"
    def load_color(name)
      if Wasko.saved_colors.include?(name)
        Wasko.load_color_from_config(name)
      else
        say "Please pick a theme from: [#{Wasko.saved_colors.join(", ")}]"
      end
    end

    desc "save NAME", "Saves current scheme to ~/.wasko"
    def save_color(name)
      rgbs = {
        :background => "{#{Wasko.current_background_color}}",
        :foreground => "{#{Wasko.current_normal_text_color}}"
      }
      Wasko.save_color_to_config(rgbs, name)
    end

    desc "list", "Lists all available colors"
    def list
      say Wasko.colors.join("\n")
    end

  end
end
Wasko::CLI.start
